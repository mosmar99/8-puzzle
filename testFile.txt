Haskell Interactive Shell (lab2_Linus.hs) λ board = [7,2,3,4,0,6,1,8,5]
Haskell Interactive Shell (lab2_Linus.hs) λ isSolved board
False
Haskell Interactive Shell (lab2_Linus.hs) λ findEmpty board
4
Haskell Interactive Shell (lab2_Linus.hs) λ replace 7 5 board
[7,2,3,4,0,6,1,5,5]
Haskell Interactive Shell (lab2_Linus.hs) λ swap 3 4 board
[7,2,3,0,4,6,1,8,5]
Haskell Interactive Shell (lab2_Linus.hs) λ board2 = swap 4 8 board
Haskell Interactive Shell (lab2_Linus.hs) λ board2
[7,2,3,4,5,6,1,8,0]
Haskell Interactive Shell (lab2_Linus.hs) λ makeMove board2 U
[[7,2,3,4,5,0,1,8,6]]
Haskell Interactive Shell (lab2_Linus.hs) λ makeMove board2 D
[]
Haskell Interactive Shell (lab2_Linus.hs) λ makeMove board2 R
[]
Haskell Interactive Shell (lab2_Linus.hs) λ makeMove board2 L
[[7,2,3,4,5,6,1,0,8]]
Haskell Interactive Shell (lab2_Linus.hs) λ state = (board2,[])
Haskell Interactive Shell (lab2_Linus.hs) λ state
([7,2,3,4,5,6,1,8,0],[])
Haskell Interactive Shell (lab2_Linus.hs) λ allFutures state
[([7,2,3,4,5,0,1,8,6],[Up]),([7,2,3,4,5,6,1,0,8],[Left])]
Haskell Interactive Shell (lab2_Linus.hs) λ take 3 $ possibleSolutions board2
    [[([7,2,3,4,5,6,1,8,0],[])],
    [([7,2,3,4,5,0,1,8,6],[Up]),([7,2,3,4,5,6,1,0,8],[Left])],
    [([7,2,0,4,5,3,1,8,6],[Up,Up]),([7,2,3,4,0,5,1,8,6],[Left,Up]),([7,2,3,4,0,6,1,5,8],[Up,Left]),([7,2,3,4,5,6,0,1,8],[Left,Left])]]
Haskell Interactive Shell (lab2_Linus.hs) λ solve board
[Right,Right,Down,Down,Left,Left,Up,Right,Up,Right,Down,Left,Up,Left,Down,Down,Right,Right,Up,Left]


{-  Examples
1. [7,2,3,4,0,6,1,8,5] --> [Right,Right,Down,Down,Left,Left,Up,Right,Up,Right,Down,Left,Up,Left,Down,Down,Right,Right,Up,Left]
2. [1,2,3,4,5,6,7,8,0] --> []
3. [7,1,2,8,4,3,0,6,5] --> [Down,Right,Right,Up,Left,Left,Down,Down,Right,Right,Up,Up]
4. [7,2,3,4,0,6,1,8,5] --> [Right,Right,Down,Down,Left,Left,Up,Right,Up,Right,Down,Left,Up,Left,Down,Down,Right,Right,Up,Left]
5. [0,8,2,1,4,3,7,6,5] --> [Down,Right,Up,Left,Down,Down,Right,Up,Right,Down]
6. [0,1,2,3,4,5,6,7,8] --> [Right,Down,Left,Down,Right,Right,Up,Left,Left,Down,Right,Up,Up,Right,Down,Down,Left,Left,Up,Right,Right,Down]
7. [3,2,7,0,4,6,5,8,1] --> [Right,Down,Down,Right,Up,Up,Left,Down,Down,Left,Up,Right,Right,Down,Left,Up,Up,Left,Down,Down,Right,Up,Right]
8. [0,2,3,1,5,6,4,7,8] --> [Right,Right,Down,Down]
9. [1,2,3,4,0,6,7,5,8] --> [Right,Down]

11. [8,1,2,0,4,3,7,6,5] --> not possible
-}